{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","console","log","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.020bc987.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport {sendMessage,isTyping} from 'react-chat-engine';\r\nimport {SendOutlined,PictureOutlined} from '@ant-design/icons';\r\n\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const {chatId,creds}=props;\r\n  const handleSubmit = (event)=> {\r\n    event.preventDefault();\r\n    const text = value.trim();\r\n    if(text.length>0) sendMessage(creds,chatId,{text});\r\n        setValue('');\r\n  }\r\n  const handleChange = (event)=> {\r\n   setValue(event.target.value);\r\n   isTyping(props, chatId);\r\n}\r\nconst handleUpload = (event) => {\r\n    sendMessage(creds,chatId,{files:event.target.files,text:''})\r\n}\r\n\r\n    return (<form className=\"message-form\" onSubmit={handleSubmit}>\r\n    <input \r\n        className=\"message-input\"\r\n        placeholder=\"send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n    />\r\n    <label htmlFor =\"upload-button\">\r\n        <span className=\"image-button\">\r\n            <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n    </label>\r\n <input \r\n     type=\"file\"\r\n     multiple={false}\r\n     id=\"upload-button\"\r\n     style={{display:'none'}}\r\n     onChange={handleUpload}\r\n />\r\n <button type=\"submit\" className=\"send-button\">\r\n     <SendOutlined className=\"send-icon\" />\r\n </button>\r\n    </form>);\r\n}\r\nexport default MessageForm;","import { RightCircleFilled } from \"@ant-design/icons\";\r\n\r\nconst MyMessage = ({message}) => {\r\n    if(message?.attachments?.length >0){\r\n        return(\r\n            <img src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style = {{float:'right'}}\r\n            />\r\n        )\r\n    }\r\n    return (<div className=\"message\" style={{float:'right',marginRight:'18px',color:'white',backgroundColor:'#3B2A50'}}>{message.text}</div>);\r\n}\r\nexport default MyMessage;","const TheirMessage= ({lastMessage,message}) => {\r\n   const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (<div className=\"message-row\">{\r\n    isFirstMessageByUser && (\r\n        <div className =\"message-avatar\"\r\n             style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n        />\r\n    )}\r\n    \r\n        {message?.attachments?.length >0?(\r\n            <img src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style = {{marginLeft: isFirstMessageByUser ?'4px':'48px'}}\r\n            />\r\n        ):(\r\n            <div className=\"message\" style={{\r\n                float:'left',backgroundColor:'#CABCDC', marginLeft: isFirstMessageByUser ?'4px':'48px'}}>{message.text}\r\n            </div>\r\n        )\r\n    \r\n        }\r\n    \r\n    </div>\r\n    );\r\n}\r\nexport default TheirMessage;","import React from 'react';\r\nimport MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nconst ChatFeed = (props) => {\r\nconsole.log(props);\r\nconst {chats, activeChat,userName,messages} = props;\r\n\r\nconst chat =chats && chats[activeChat];\r\nconst renderReadReceipts = (message,isMyMessage) => {\r\n return chat.people.map((person,index) => person.last_read === message.id && (\r\n <div \r\n     key ={`read_${index}`}\r\n     className=\"read-receipt\"\r\n     style={{\r\n         float: isMyMessage ? 'right':'left',backgroundImage: `url(${person?.person?.avatar})`\r\n     }}\r\n\r\n />\r\n ))\r\n}\r\n\r\nconst renderMessages = () => {\r\n    const keys =Object.keys(messages);\r\n\r\n    return keys.map((key,index) => {\r\n        const message = messages[key];\r\n        const lastMessageKey = index === 0 ?null:keys[index-1];\r\n        const isMyMessage = userName === message.sender.username;\r\n        return (<div  key ={`msg_${index}`} style ={{width: '100%'}}>\r\n        <div className=\"message-block\">\r\n         {\r\n             isMyMessage?<MyMessage message={message}/>:<TheirMessage message={message} lastMessage= {messages[lastMessageKey]}/>\r\n         }\r\n\r\n        </div>\r\n        <div className=\"read-receipts\" style ={{marginRight: isMyMessage?'18px':'0px',marginLeft: isMyMessage ?'0px':'68px'}}>{renderReadReceipts(message, isMyMessage)}</div>\r\n        \r\n        </div>);\r\n    });\r\n}\r\nif(!chat) return 'Loading...';\r\nreturn (<div className=\"chat-feed\">\r\n  <div className=\"chat-title-container\">\r\n  <div className=\"chat-title\">{chat.title}</div>\r\n  <div className= \"chat-subtitle\">\r\n      {chat.people.map((person) => ` ${person.person.username}`)}\r\n  </div>\r\n  </div>\r\n  {renderMessages()}\r\n<div style={{ height: '100px'  }}/>\r\n<div className=\"message-form-container\">\r\n<MessageForm {...props} chatId={activeChat}/>\r\n</div>\r\n</div>\r\n);\r\n}\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst projectID = 'c34d3523-0b16-496a-ab22-531f04da6b77';\r\n\r\nconst Modal = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Oops, incorrect credentials.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Modal;","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport './App.css';\r\n\r\nconst projectID = 'c34d3523-0b16-496a-ab22-531f04da6b77';\r\n\r\nconst App = () => {\r\n  if (!localStorage.getItem('username')) return <LoginForm />;\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID={projectID}\r\n      userName={localStorage.getItem('username')}\r\n      userSecret={localStorage.getItem('password')}\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n    />\r\n  );\r\n};\r\n\r\n// infinite scroll, logout, more customizations...\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}